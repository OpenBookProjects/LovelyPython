##language:zh
##OBP项目图书reST通用文章模板
###format rst
||status|| 草稿 ||清风 & liz; 100%||

[[TableOfContents]]

= chardet =
== 概述 ==
chardet是一个开源的字符编码自动检测模块,是基于Python实现的.读者可以在chardet的网站上下载这个[http://chardet.feedparser.org/download/chardet-1.0.1.tgz 模块]并根据源码包中相关说明进行安装.

== 使用 ==
=== chardet.detect() ===
利用chardet来自动检测字符编码的最简单方式是使用dectect(),它以一个非unicode字符串作为参数,返回一个由编码方式和可信度数值(介于0~1之间)组成的字典数据结构.
{{{
>>> import urllib
>>> rawdata = urllib.urlopen('http://www.baidu.com').read()
>>> import chardet
>>> chardet.detect(rawdata)
{'confidence': 0.98999999999999999, 'encoding': 'GB2312'}
}}}可以看到,检测出该网页编码方式为GB2312的可信度是0.98999999999999999,一个非常高的值.

=== UniversalDetector ===
对于大量的文本,提供了可以渐进检测字符编码的相关方法,并且在满足可信度后会自动停止检测.具体是通过UniversalDetector对象的feed方法不断检测每个文本块,当达到最小可信度阈值时,就标记UniversalDetector对象的done值为True,表示完成检测.
已经读取完待检测文本之后若调用UniversalDetector对象的close方法,它会在没有达到最小可信度的情况下再做一些计算,以便返回最大程度准确的值,该值是和chardet.detect函数一样的字典结构.
{{{#!python
import urllib
from chardet.universaldetector import UniversalDetector

usock = urllib.urlopen('http://www.baidu.com')
detector = UniversalDetector()
for line in usock.readlines():
    detector.feed(line)
    if detector.done: break
detector.close()
usock.close()
print detector.result
}}}
其运行结果如下:
{{{
$ python pcs-202-1.py 
{'confidence': 0.98999999999999999, 'encoding': 'GB2312'}
}}}
如果想对多个独立文本进行编码检测,可以重复使用同一个UniversalDetector对象,只要在每个文本开始检测前调用reset()以表明接下来读取的是与之前文本独立的字符串,然后就可以类似于上述例子中的调用feed(),然后调用close()结束,最终的检测结果放在result中.
{{{#!python
import glob
from chardet.universaldetector import UniversalDetector

detector = UniversalDetector()
for filename in glob.glob('*.py'):
    print filename.ljust(60),
    detector.reset()
    for line in file(filename, 'rb'):
        detector.feed(line)
        if detector.done: break
    detector.close()
    print detector.result
}}}
其运行结果如下:
{{{
$ python pcs-202-2.py 
pcs-202-1.py                                                 {'confidence': 1.0, 'encoding': 'ascii'}
pcs-202-2.py                                                 {'confidence': 1.0, 'encoding': 'ascii'}
}}}